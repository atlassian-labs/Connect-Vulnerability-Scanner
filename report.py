import datetime
from dataclasses import dataclass, asdict


@dataclass
class Vulnerability:
    check_name: str
    description: str
    recommendation: str
    proof: str
    severity: str
    app_key: str
    app_name: str
    date: str

class Reporter:

    def __init__(self, app_key, app_name):
        self.started_at = datetime.datetime.now(datetime.timezone.utc).isoformat()
        self.vulns = []
        self.app_key = app_key
        self.app_name = app_name

    def add_vuln(self, check_name: str, description: str, recommendation: str, proof: str, severity: str):
        self.vulns.append(asdict(Vulnerability(check_name=check_name, description=description, recommendation=recommendation, proof=proof, severity=severity, app_key=self.app_key, app_name=self.app_name, date=str(datetime.date.today()))))

    def finish(self):
        return {
                "vulns": self.vulns,
                "scanner": "Connect Vulnerability Scanner",
                "started_at": self.started_at,
                "ended_at": datetime.datetime.now(datetime.timezone.utc).isoformat(),
                "scanned": [self.app_key],
                "errors": False,
                }
